{
    "connections": [
        {
            "input": "phy",
            "input_step": "pathd8",
            "name": "phy"
        },
        {
            "input": "tree",
            "input_step": "aceArbor",
            "output": "res",
            "output_step": "pathd8"
        },
        {
            "input": "column",
            "input_step": "aceArbor",
            "name": "column"
        },
        {
            "input": "type",
            "input_step": "aceArbor",
            "name": "type"
        },
        {
            "input": "method",
            "input_step": "aceArbor",
            "name": "method"
        },
        {
            "name": "res",
            "output": "res",
            "output_step": "aceArbor"
        },
        {
            "name": "treePlot",
            "output": "treePlot",
            "output_step": "aceArbor"
        },
        {
            "input": "table",
            "input_step": "aceArbor",
            "name": "table"
        }
    ],
    "description": "",
    "inputs": [
        {
            "format": "r.apetree",
            "id": "phy",
            "name": "phy",
            "type": "tree",
            "x": 81,
            "y": 15
        },
        {
            "default": "island",
            "domain": {
                "format": "column.names",
                "input": "table"
            },
            "format": "text",
            "id": "column",
            "name": "column",
            "type": "string",
            "x": 263,
            "y": 293
        },
        {
            "default": "discrete",
            "domain": [
                "discrete",
                "continuous"
            ],
            "format": "text",
            "id": "type",
            "name": "type",
            "type": "string",
            "x": 347,
            "y": 427
        },
        {
            "default": "marginal",
            "domain": [
                "marginal"
            ],
            "format": "text",
            "id": "method",
            "name": "method",
            "type": "string",
            "x": 582,
            "y": 442
        },
        {
            "format": "r.dataframe",
            "id": "table",
            "name": "table",
            "type": "table",
            "x": 273,
            "y": 143
        }
    ],
    "mode": "workflow",
    "name": "aceBarnacles",
    "outputs": [
        {
            "format": "r.dataframe",
            "id": "res",
            "name": "res",
            "type": "table",
            "x": 873,
            "y": 143
        },
        {
            "format": "png.base64",
            "id": "treePlot",
            "name": "treePlot",
            "type": "image",
            "x": 880,
            "y": 289
        }
    ],
    "steps": [
        {
            "girderId": "56c9e4a527241d02d083b616",
            "modified": "2016-02-21 16:25:03.445000",
            "name": "pathd8",
            "task": {
                "description": "",
                "inputs": [
                    {
                        "format": "r.apetree",
                        "id": "phy",
                        "name": "phy",
                        "type": "tree"
                    }
                ],
                "mode": "r",
                "name": "pathd8",
                "outputs": [
                    {
                        "format": "r.apetree",
                        "id": "res",
                        "name": "res",
                        "type": "tree"
                    }
                ],
                "script": "library(geiger)\n\nres<-PATHd8.phylo(phy)"
            },
            "visualization": false,
            "x": 320,
            "y": 19
        },
        {
            "girderId": "56c6ece77a773016c6f58ae3",
            "modified": "2016-02-19 10:22:31.169000",
            "name": "aceArbor",
            "task": {
                "description": "",
                "inputs": [
                    {
                        "description": "A Phylogenetic Tree",
                        "format": "r.apetree",
                        "name": "tree",
                        "type": "tree"
                    },
                    {
                        "format": "r.dataframe",
                        "name": "table",
                        "type": "table"
                    },
                    {
                        "default": "island",
                        "domain": {
                            "format": "column.names",
                            "input": "table"
                        },
                        "format": "text",
                        "name": "column",
                        "type": "string"
                    },
                    {
                        "default": "discrete",
                        "domain": [
                            "discrete",
                            "continuous"
                        ],
                        "format": "text",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "default": "marginal",
                        "domain": [
                            "marginal"
                        ],
                        "format": "text",
                        "name": "method",
                        "type": "string"
                    }
                ],
                "mode": "r",
                "name": "aceArbor",
                "outputs": [
                    {
                        "format": "r.dataframe",
                        "name": "res",
                        "type": "table"
                    },
                    {
                        "format": "png.base64",
                        "name": "treePlot",
                        "type": "image"
                    }
                ],
                "script": "library(cardoonTools)\nrequire(aRbor)\n\n\n# Removed this parameter to restore automated use of the analyses from Easy Mode apps\nfont_size <- 1\n\ntd <- make.treedata(tree, table)\ntd1 <- select_(td, column)\noutput <- aceArbor(td1, charType=type, aceType=method)\n\n\nTH <- max(branching.times(td$phy))\n    \n# plot and wrap the result in a PNG for output on the webpage\ntreePlot <- cardoonPlot(expression(plot(output, label.offset=0.05*TH)), width=1000, height=1000, res=100)\ntreePlot <- treePlot$png\n\nres <- output[[1]]    \nnodeLabels<-1:td1$phy$Nnode + length(td1$phy$tip.label)\nres<-cbind(nodeLabels, res)"
            },
            "visualization": false,
            "x": 573,
            "y": 143
        }
    ]
}